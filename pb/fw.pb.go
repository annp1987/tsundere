// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.20.0
// 	protoc        (unknown)
// source: fw.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *BanRequest) Reset() {
	*x = BanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fw_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanRequest) ProtoMessage() {}

func (x *BanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fw_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanRequest.ProtoReflect.Descriptor instead.
func (*BanRequest) Descriptor() ([]byte, []int) {
	return file_fw_proto_rawDescGZIP(), []int{0}
}

func (x *BanRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type BanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BanResponse) Reset() {
	*x = BanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fw_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanResponse) ProtoMessage() {}

func (x *BanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fw_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanResponse.ProtoReflect.Descriptor instead.
func (*BanResponse) Descriptor() ([]byte, []int) {
	return file_fw_proto_rawDescGZIP(), []int{1}
}

type UnbanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *UnbanRequest) Reset() {
	*x = UnbanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fw_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbanRequest) ProtoMessage() {}

func (x *UnbanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fw_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbanRequest.ProtoReflect.Descriptor instead.
func (*UnbanRequest) Descriptor() ([]byte, []int) {
	return file_fw_proto_rawDescGZIP(), []int{2}
}

func (x *UnbanRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type UnbanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnbanResponse) Reset() {
	*x = UnbanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fw_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbanResponse) ProtoMessage() {}

func (x *UnbanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fw_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbanResponse.ProtoReflect.Descriptor instead.
func (*UnbanResponse) Descriptor() ([]byte, []int) {
	return file_fw_proto_rawDescGZIP(), []int{3}
}

type ListBannedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListBannedRequest) Reset() {
	*x = ListBannedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fw_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBannedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBannedRequest) ProtoMessage() {}

func (x *ListBannedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fw_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBannedRequest.ProtoReflect.Descriptor instead.
func (*ListBannedRequest) Descriptor() ([]byte, []int) {
	return file_fw_proto_rawDescGZIP(), []int{4}
}

type ListBannedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip map[string]uint32 `protobuf:"bytes,1,rep,name=ip,proto3" json:"ip,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ListBannedResponse) Reset() {
	*x = ListBannedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fw_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBannedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBannedResponse) ProtoMessage() {}

func (x *ListBannedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fw_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBannedResponse.ProtoReflect.Descriptor instead.
func (*ListBannedResponse) Descriptor() ([]byte, []int) {
	return file_fw_proto_rawDescGZIP(), []int{5}
}

func (x *ListBannedResponse) GetIp() map[string]uint32 {
	if x != nil {
		return x.Ip
	}
	return nil
}

var File_fw_proto protoreflect.FileDescriptor

var file_fw_proto_rawDesc = []byte{
	0x0a, 0x08, 0x66, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x1c,
	0x0a, 0x0a, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x0d, 0x0a, 0x0b,
	0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x0a, 0x0c, 0x55,
	0x6e, 0x62, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x0f, 0x0a, 0x0d, 0x55,
	0x6e, 0x62, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x7b, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x02, 0x69, 0x70, 0x1a, 0x35, 0x0a, 0x07, 0x49, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xa3,
	0x01, 0x0a, 0x08, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x12, 0x28, 0x0a, 0x03, 0x42,
	0x61, 0x6e, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x05, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x12, 0x10,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fw_proto_rawDescOnce sync.Once
	file_fw_proto_rawDescData = file_fw_proto_rawDesc
)

func file_fw_proto_rawDescGZIP() []byte {
	file_fw_proto_rawDescOnce.Do(func() {
		file_fw_proto_rawDescData = protoimpl.X.CompressGZIP(file_fw_proto_rawDescData)
	})
	return file_fw_proto_rawDescData
}

var file_fw_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_fw_proto_goTypes = []interface{}{
	(*BanRequest)(nil),         // 0: pb.BanRequest
	(*BanResponse)(nil),        // 1: pb.BanResponse
	(*UnbanRequest)(nil),       // 2: pb.UnbanRequest
	(*UnbanResponse)(nil),      // 3: pb.UnbanResponse
	(*ListBannedRequest)(nil),  // 4: pb.ListBannedRequest
	(*ListBannedResponse)(nil), // 5: pb.ListBannedResponse
	nil,                        // 6: pb.ListBannedResponse.IpEntry
}
var file_fw_proto_depIdxs = []int32{
	6, // 0: pb.ListBannedResponse.ip:type_name -> pb.ListBannedResponse.IpEntry
	0, // 1: pb.Firewall.Ban:input_type -> pb.BanRequest
	2, // 2: pb.Firewall.Unban:input_type -> pb.UnbanRequest
	4, // 3: pb.Firewall.ListBanned:input_type -> pb.ListBannedRequest
	1, // 4: pb.Firewall.Ban:output_type -> pb.BanResponse
	3, // 5: pb.Firewall.Unban:output_type -> pb.UnbanResponse
	5, // 6: pb.Firewall.ListBanned:output_type -> pb.ListBannedResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_fw_proto_init() }
func file_fw_proto_init() {
	if File_fw_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fw_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fw_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fw_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fw_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fw_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBannedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fw_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBannedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fw_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fw_proto_goTypes,
		DependencyIndexes: file_fw_proto_depIdxs,
		MessageInfos:      file_fw_proto_msgTypes,
	}.Build()
	File_fw_proto = out.File
	file_fw_proto_rawDesc = nil
	file_fw_proto_goTypes = nil
	file_fw_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FirewallClient is the client API for Firewall service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FirewallClient interface {
	Ban(ctx context.Context, in *BanRequest, opts ...grpc.CallOption) (*BanResponse, error)
	Unban(ctx context.Context, in *UnbanRequest, opts ...grpc.CallOption) (*UnbanResponse, error)
	ListBanned(ctx context.Context, in *ListBannedRequest, opts ...grpc.CallOption) (*ListBannedResponse, error)
}

type firewallClient struct {
	cc grpc.ClientConnInterface
}

func NewFirewallClient(cc grpc.ClientConnInterface) FirewallClient {
	return &firewallClient{cc}
}

func (c *firewallClient) Ban(ctx context.Context, in *BanRequest, opts ...grpc.CallOption) (*BanResponse, error) {
	out := new(BanResponse)
	err := c.cc.Invoke(ctx, "/pb.Firewall/Ban", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *firewallClient) Unban(ctx context.Context, in *UnbanRequest, opts ...grpc.CallOption) (*UnbanResponse, error) {
	out := new(UnbanResponse)
	err := c.cc.Invoke(ctx, "/pb.Firewall/Unban", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *firewallClient) ListBanned(ctx context.Context, in *ListBannedRequest, opts ...grpc.CallOption) (*ListBannedResponse, error) {
	out := new(ListBannedResponse)
	err := c.cc.Invoke(ctx, "/pb.Firewall/ListBanned", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FirewallServer is the server API for Firewall service.
type FirewallServer interface {
	Ban(context.Context, *BanRequest) (*BanResponse, error)
	Unban(context.Context, *UnbanRequest) (*UnbanResponse, error)
	ListBanned(context.Context, *ListBannedRequest) (*ListBannedResponse, error)
}

// UnimplementedFirewallServer can be embedded to have forward compatible implementations.
type UnimplementedFirewallServer struct {
}

func (*UnimplementedFirewallServer) Ban(context.Context, *BanRequest) (*BanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ban not implemented")
}
func (*UnimplementedFirewallServer) Unban(context.Context, *UnbanRequest) (*UnbanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unban not implemented")
}
func (*UnimplementedFirewallServer) ListBanned(context.Context, *ListBannedRequest) (*ListBannedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBanned not implemented")
}

func RegisterFirewallServer(s *grpc.Server, srv FirewallServer) {
	s.RegisterService(&_Firewall_serviceDesc, srv)
}

func _Firewall_Ban_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FirewallServer).Ban(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Firewall/Ban",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FirewallServer).Ban(ctx, req.(*BanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Firewall_Unban_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnbanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FirewallServer).Unban(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Firewall/Unban",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FirewallServer).Unban(ctx, req.(*UnbanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Firewall_ListBanned_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBannedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FirewallServer).ListBanned(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Firewall/ListBanned",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FirewallServer).ListBanned(ctx, req.(*ListBannedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Firewall_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Firewall",
	HandlerType: (*FirewallServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ban",
			Handler:    _Firewall_Ban_Handler,
		},
		{
			MethodName: "Unban",
			Handler:    _Firewall_Unban_Handler,
		},
		{
			MethodName: "ListBanned",
			Handler:    _Firewall_ListBanned_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fw.proto",
}
